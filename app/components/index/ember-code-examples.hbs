<div class="grid lg:grid-2">
  <div class='lg:col-3'>
    <h3 class='text-lg'>Components embrace HTML</h3>
    <p>
      Ember components are a superset of HTML - that means
      <span class="inline-code">&lt;p&gt;Hello World&lt;/p&gt;</span>
      is a fully-fledged Ember Component. Simply wrap your HTML with a <span class="inline-code">&lt;template&gt;</span> tag and that block is now a reusable component.
    </p>
  </div>
</div>
{{!-- <CodeBlock @code={{this.simpleComponent}} @language='gjs' @showCopyButton={{false}} /> --}}
<CodePreview @code={{this.simpleComponent}} />

<div class="grid lg:grid-2 mt-4">
  <div class='lg:col-3'>
    <h3 class='text-lg'>Simple composability</h3>
    <p>
      Ember components accept arguments to be made dynamic. To pass data into components, use the <span class="inline-code">@</span> symbol along with an argument name.
    </p>
  </div>
</div>
<CodeBlock @code={{this.composableComponent}} @language='gjs' @showCopyButton={{false}} />

<div class="grid lg:grid-2 mt-4">
  <div class='lg:col-3'>
    <h3 class='text-lg'>Delightful reactivity</h3>
    <p>
      State can be added to Ember components progressively by wrapping the template in a JavaScript class. Properties with the
      <span class="inline-code">@tracked</span> decorator will automatically rerender the component when they change.
    </p>
  </div>
</div>
<CodeBlock @code={{this.stateManagemnent}} @language='gjs' @showCopyButton={{false}} />